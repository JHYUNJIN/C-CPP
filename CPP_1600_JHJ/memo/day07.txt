가상함수 추가
	가상함수는 자식 클래스가 재정의할 수 있는 함수이다.
 	만약 상속관계가 아니라면 가상 함수는 선언할 필요가 없으므로 
	가상 함수는 상속 계층내에서만 의미가 있으며 자식 클래스에게 재정의 기회를 주기 위해
	존재하는 것이라고 할 수 있다.
	그러나 가상함수를 반드시 재정의 해야만 하는 것은 아니다
	부모 클래스의 동작을 그대로 쓰고 싶다면 단순히 상속만 받고 변경할 필요가 있을때만
	재정의하면 된다.
	부모 클래스가 가상 함수를 만드는 이유는 혹시라도 재정의하고 포인터로 호출할 때를 대비한것이다.
	가상함수는 재정의해도 되는 함수이지 반드시 재저으이해야하는 함수는 아니다.

순수 가상함수 <-- 강제성을 부여한다.
		순수 가상함수는 자식 클래스에서 반드시 재정의해야하는 함수이다.
 		순수 가상함수는 일반적으로 함수이 동작을 정의하는 본체(바디)를 가지지않으며
		따라서 이 상태에서는 호출할 수 없다.
		본체가 없다는 뜻으로 함수 선언부의 끝에 =0이라는 표기를 하는데 함수만 있고 
		코드가 비어있다는 뜻이다.

추상클래스
	순수 가상 함수를 멤버로 가지는 클래스

인터페이스
	순수 가상 함수로만 이루어진 클래스를 인터페이스라고 한다.
	멤버 변수는 가지지 않는다.
	인턴페이스를 상속받는 클래스들을 반드시 인터페이스 안에 있는 모든 함수들을 전부 재정의 해야한다.
	인터페이스 클래스 이름 앞에 I(대문자 I) 를 붙여주는게 관습이다.

다중 상속
	두 개 이상의 부모 클래스를 하나의 자식 클래스에 상속하는 것이다.
	이미 잘 동작하는 클래스들을 다중 상속해서 새로운 클래스를 만들어 낼 수 있다.
	하지만 여러가지 문제점과 복잡도에 비해 실용성이 떨어지는 문법이다.
